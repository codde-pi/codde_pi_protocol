// This file is automatically generated, so please do not edit it.
// Generated by `flutter_rust_bridge`@ 2.0.0-dev.28.

// ignore_for_file: invalid_use_of_internal_member, unused_import, unnecessary_import

import '../../../frb_generated.dart';
import '../../models/frame.dart';
import '../../models/server.dart';
import '../../models/widget_registry.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';

// Rust type: RustOpaqueMoi<flutter_rust_bridge::for_generated::rust_async::RwLock<ComSocketServer>>
@sealed
class ComSocketServer extends RustOpaque {
  ComSocketServer.dcoDecode(List<dynamic> wire)
      : super.dcoDecode(wire, _kStaticData);

  ComSocketServer.sseDecode(int ptr, int externalSizeOnNative)
      : super.sseDecode(ptr, externalSizeOnNative, _kStaticData);

  static final _kStaticData = RustArcStaticData(
    rustArcIncrementStrongCount:
        RustLib.instance.api.rust_arc_increment_strong_count_ComSocketServer,
    rustArcDecrementStrongCount:
        RustLib.instance.api.rust_arc_decrement_strong_count_ComSocketServer,
    rustArcDecrementStrongCountPtr:
        RustLib.instance.api.rust_arc_decrement_strong_count_ComSocketServerPtr,
  );

  Future<void> callback(
          {required int id,
          required ServerStatus status,
          required PyPyAny data,
          dynamic hint}) =>
      RustLib.instance.api.comSocketServerCallback(
        that: this,
        id: id,
        status: status,
        data: data,
      );

  Future<void> close({dynamic hint}) =>
      RustLib.instance.api.comSocketServerClose(
        that: this,
      );

  // HINT: Make it `#[frb(sync)]` to let it become the default constructor of Dart class.
  static Future<ComSocketServer> newInstance(
          {required Str address, dynamic hint}) =>
      RustLib.instance.api.comSocketServerNew(address: address, hint: hint);

  Future<void> open({dynamic hint}) => RustLib.instance.api.comSocketServerOpen(
        that: this,
      );

  Future<void> serve({dynamic hint}) =>
      RustLib.instance.api.comSocketServerServe(
        that: this,
      );
}
